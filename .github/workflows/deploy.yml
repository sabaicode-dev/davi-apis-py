name: Deploy to AWS EC2

on:
  push:
    branches:
      - main # Trigger the workflow on push to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python (if needed for your app)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x" # Set to your required Python version

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Upload code to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/my_key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            # Update system
            sudo apt-get update -y
            
            # Install necessary dependencies
            sudo apt-get install -y python3-pip python3-dev git

            # Navigate to your project directory (if required)
            cd /home/${{ secrets.AWS_EC2_USER }}/myproject || exit

            # Pull the latest code from GitHub
            git pull origin main || exit

            # Install dependencies
            pip3 install -r requirements.txt

            # Restart your app (e.g., using Gunicorn or Flask's built-in server)
            # For example, for a Django app:
            sudo systemctl restart myproject.service || exit

            # Or manually restart app if no service setup:
            # python manage.py migrate  # if you need to migrate your database
            # python manage.py collectstatic --noinput  # collect static files for Django

          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
