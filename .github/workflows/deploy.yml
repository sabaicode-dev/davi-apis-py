name: Deploy to EC2

on:
  push:
    branches:
      - main  # Deploy only when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Locate docker-compose.yml
        run: |
          echo "Searching for docker-compose.yml..."
          find . -name "docker-compose.yml" || echo "Error: docker-compose.yml not found."
          # Adjust the DOCKER_COMPOSE_PATH variable once you know the exact path.
          # Replace "path/to/docker-compose.yml" with the actual location in your repo
          DOCKER_COMPOSE_PATH="path/to/docker-compose.yml"
          if [ ! -f $DOCKER_COMPOSE_PATH ]; then
            echo "Error: docker-compose.yml not found at $DOCKER_COMPOSE_PATH."
            exit 1
          fi

      - name: Compress files for transfer
        run: |
          DOCKER_COMPOSE_PATH="path/to/docker-compose.yml"  # Set this to the actual path after locating
          mkdir temp_deploy_dir
          rsync -av --exclude='.git' --exclude='.github' . temp_deploy_dir/
          # Copy docker-compose.yml manually if it's in a subdirectory
          cp $DOCKER_COMPOSE_PATH temp_deploy_dir/
          tar -czf app.tar.gz -C temp_deploy_dir .
          rm -rf temp_deploy_dir  # Clean up temp directory

      - name: Copy compressed files to EC2
        run: |
          scp -o StrictHostKeyChecking=no app.tar.gz ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }}:/home/${{ secrets.AWS_EC2_USER }}/

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            cd /home/${{ secrets.AWS_EC2_USER }}
            rm -rf app  # Remove old app directory to avoid conflicts
            mkdir app
            tar -xzf app.tar.gz -C app  # Extract files into app directory
            cd app
            # List contents to verify docker-compose.yml is present
            echo "Listing contents of /home/${{ secrets.AWS_EC2_USER }}/app:"
            ls -la
            
            # Check if docker-compose.yml exists
            if [ ! -f docker-compose.yml ]; then
              echo "Error: docker-compose.yml not found in /home/${{ secrets.AWS_EC2_USER }}/app"
              exit 1
            fi

            # Update package list and install Docker Compose
            sudo apt update
            sudo apt install -y docker-compose
            docker-compose down  # Stop existing containers
            docker-compose up --build -d  # Rebuild and run in detached mode
          EOF
